{"version":3,"sources":["webpack:///./src/components/Posts/styles.tsx","webpack:///./src/components/Posts/index.tsx","webpack:///./src/pages/blog.tsx"],"names":["Posts","styled","div","Post","Card","Content","Image","figure","Title","h3","Description","p","Date","Tags","Tag","span","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","posts","edges","Container","section","TitleSection","title","center","map","item","node","id","slug","fields","cover","description","date","tags","key","to","whileHover","scale","whileTap","fluid","childImageSharp","alt","BlogPage","Layout","SEO"],"mappings":"2PAGaA,EAAQC,IAAOC,IAAV,oEAAGD,CAAH,SACZ,+CAGOE,EAAOF,IAAOC,IAAV,mEAAGD,CAAH,SACX,4EAGOG,EAAOH,IAAOC,IAAV,mEAAGD,CAAH,SACX,oJAGOI,EAAUJ,IAAOC,IAAV,sEAAGD,CAAH,SACd,kCAGOK,EAAQL,IAAOM,OAAV,oEAAGN,CAAH,SACZ,gBAGOO,EAAQP,IAAOQ,GAAV,oEAAGR,CAAH,SACZ,wCAGOS,EAAcT,IAAOU,EAAV,0EAAGV,CAAH,MAEXW,EAAOX,IAAOQ,GAAV,mEAAGR,CAAH,SACX,sCAGOY,EAAOZ,IAAOC,IAAV,mEAAGD,CAAH,QACX,uDAGOa,EAAMb,IAAOc,KAAV,kEAAGd,CAAH,QACV,iNC+ESD,EAtFS,WAAM,aACpBgB,EADoB,EACpBA,eAAgBC,EADI,EACJA,kBAuClBC,EAA6BF,EAAeG,YAC5CC,EAAgBH,EAAkBI,MAExC,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAACC,EAAA,EAAD,CAAcC,MAAOP,EAAaO,MAAOC,QAAM,IAC/C,kBAAC,EAAD,KACGN,EAAMO,KAAI,SAACC,GAAS,MAKfA,EAAKC,KAHPC,EAFiB,EAEjBA,GACUC,EAHO,EAGjBC,OAAUD,KAHO,IAIjBZ,YAAeM,EAJE,EAIFA,MAAOQ,EAJL,EAIKA,MAAOC,EAJZ,EAIYA,YAAaC,EAJzB,EAIyBA,KAAMC,EAJ/B,EAI+BA,KAGlD,OACE,kBAAC,EAAD,CAAaC,IAAKP,GAChB,kBAAC,IAAD,CAAMQ,GAAIP,GACR,kBAAC,IAAO7B,IAAR,CACEqC,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,IAEnB,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAKE,MAAOT,EAAMU,gBAAgBD,MAAOE,IAAKnB,KAEhD,kBAAC,EAAD,KACE,kBAAC,EAAD,KAAcU,GACd,kBAAC,EAAD,KAAeV,GACf,kBAAC,EAAD,KAAqBS,IAEvB,kBAAC,EAAD,KACGE,EAAKT,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAYS,IAAKT,GAAOA,iBCxFjCiB,UATY,WACzB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKtB,MAAM,SACX,kBAAC,EAAD,S","file":"component---src-pages-blog-tsx-a88006b3eae0b2fe355d.js","sourcesContent":["import styled from 'styled-components'\nimport tw from 'tailwind.macro'\n\nexport const Posts = styled.div`\n  ${tw`w-full flex flex-wrap`};\n`\n\nexport const Post = styled.div`\n  ${tw`w-full sm:w-1/2 p-3`};\n`\n\nexport const Card = styled.div`\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\n`\n\nexport const Content = styled.div`\n  ${tw`p-4 text-indigo-900`};\n`\n\nexport const Image = styled.figure`\n  ${tw`w-full`};\n`\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`\n\nexport const Description = styled.p``\n\nexport const Date = styled.h3`\n  ${tw`text-xs text-gray-500`};\n`\n\nexport const Tags = styled.div`\n  ${tw`p-4 pt-2 mt-auto`}\n`\n\nexport const Tag = styled.span`\n  ${tw`text-xs text-gray-900 border border-orange-600 rounded-full px-2 py-1 mr-2`}\n`\n","import Container from 'components/UI/Container'\nimport TitleSection from 'components/UI/TitleSection'\nimport { motion } from 'framer-motion'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Link from 'gatsby-link'\nimport { ImageSharpFluid, SectionTitle } from 'helpers/definitions'\nimport React from 'react'\n\nimport * as Styled from './styles'\n\ninterface Post {\n  node: {\n    id: string\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      title: string\n      description: string\n      date: string\n      tags: string[]\n      cover: {\n        childImageSharp: {\n          fluid: ImageSharpFluid\n        }\n      }\n    }\n  }\n}\n\nconst Posts: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"blog section\" } }) {\n        frontmatter {\n          title\n        }\n      }\n      allMarkdownRemark(\n        filter: {\n          frontmatter: { category: { eq: \"blog\" }, published: { eq: true } }\n        }\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              date(formatString: \"MMM DD, YYYY\")\n              tags\n              cover {\n                childImageSharp {\n                  fluid(maxWidth: 800) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter\n  const posts: Post[] = allMarkdownRemark.edges\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} center />\n      <Styled.Posts>\n        {posts.map((item) => {\n          const {\n            id,\n            fields: { slug },\n            frontmatter: { title, cover, description, date, tags },\n          } = item.node\n\n          return (\n            <Styled.Post key={id}>\n              <Link to={slug}>\n                <motion.div\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 1 }}\n                >\n                  <Styled.Card>\n                    <Styled.Image>\n                      <Img fluid={cover.childImageSharp.fluid} alt={title} />\n                    </Styled.Image>\n                    <Styled.Content>\n                      <Styled.Date>{date}</Styled.Date>\n                      <Styled.Title>{title}</Styled.Title>\n                      <Styled.Description>{description}</Styled.Description>\n                    </Styled.Content>\n                    <Styled.Tags>\n                      {tags.map((item) => (\n                        <Styled.Tag key={item}>{item}</Styled.Tag>\n                      ))}\n                    </Styled.Tags>\n                  </Styled.Card>\n                </motion.div>\n              </Link>\n            </Styled.Post>\n          )\n        })}\n      </Styled.Posts>\n    </Container>\n  )\n}\n\nexport default Posts\n","import React from 'react'\n\nimport Layout from 'components/Layout'\nimport SEO from 'components/SEO'\nimport Posts from 'components/Posts'\n\nconst BlogPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Posts />\n    </Layout>\n  )\n}\n\nexport default BlogPage\n"],"sourceRoot":""}